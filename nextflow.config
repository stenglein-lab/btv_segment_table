params {

  // -------------------------
  // Input/Output directories
  // -------------------------
  input_dir    = "$baseDir/input/"
  fastq_dir    = "${params.input_dir}/fastq/"
  refseq_dir   = "${params.input_dir}/refseq/"
  outdir       = "results"

  // create hard links of output files in results folder
  publish_dir_mode      = "link"

  // pattern to match for fastq files
  fastq_pattern         = "*_R[12]*.fastq*"

  initial_fastqc_dir    = "${params.outdir}/initial_fastqc/"
  post_trim_fastqc_dir  = "${params.outdir}/post_trim_fastqc/"

  // reports on running the pipeline itself
  tracedir              = "${outdir}/pipeline_info"

  // where are R and shell scripts are found.
  script_dir            = "${baseDir}/scripts"

  // ------------------
  // Trimming settings 
  // ------------------
  always_trim_5p_bases = "0"
  always_trim_3p_bases = "1"
  post_trim_min_length = "100"

  trim_primers         = true
  primers_to_trim_file = "${params.refseq_dir}/BTV_primers.fasta"

  // a fasta file containing the virus reference sequences to which to map
  refseq_fasta         = "${params.refseq_dir}/btv_refseq.fasta"
                                                                                
  // bowtie2 mapping mode: local or end-to-end
  bt_mode              = "end-to-end"
                                                                                
  // min bowtie alignment score 
  // C,160,1 = constant minimum score of 160
  bt_min_score         = "C,160,1"
  
  // other bowtie2 mapping parameters: taken from Justin Lee's script 
  // see: http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml
  bt_other_params      = " -D 120 -R 60 -X 600"


  // singularity_pull_docker_container option
  //
  // turn this parameter on to pull docker containers and convert to singularity
  //
  // see e.g.: https://nf-co.re/gwas#quick-start, which states:
  //
  //   "If you are persistently observing issues downloading Singularity images directly
  //    due to timeout or network issues then please use the --singularity_pull_docker_container
  //    parameter to pull and convert the Docker image instead."
  //
  // TODO: this option is provided in nf-core pipelines but is it necessary?
  //       possibly remove this option and the corresponding if/else statment in processes?
  //

  singularity_pull_docker_container = false

}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

process {

  // ------------------------------------------------------------
  // setup resource usage limits for different types of processes
  // ------------------------------------------------------------

  // high memory process like blastn (using nt database)
  withLabel: 'highmem' {
    maxForks = 2
    cpus = 24
  }

  // low memory processes that use multi-threading
  // like bowtie2
  withLabel: 'lowmem_threaded' {
    maxForks = 6
    cpus = 8
  }

  // low memory processes that don't use multi-threading
  withLabel: 'lowmem_non_threaded' {
    maxForks = 24
    cpus = 1
  }
}

/*
   Profiles allow you to run on different servers or with different base configurations
   See: https://www.nextflow.io/docs/latest/config.html#config-profiles
*/
profiles {

  local {
    exector.name = 'local'
    executor.queueSize = 24
    executor.cpus = 48
    executor.memory = '128 GB'
  }

  conda {
    params.enable_conda    = true
    process.conda          = "./conda/btv_segment_table_conda_env.yaml"
    singularity.enabled    = false
    conda.cacheDir         = "$HOME/conda_cacheDir"
  }

  singularity {
    params.enable_conda    = false
    singularity.enabled    = true
    singularity.autoMounts = true
    singularity.cacheDir   = "$HOME/singularity_cacheDir"
    // if the pipeline has to access system paths outside of $HOME, $PWD, etc 
    // have to bind those paths to singularity.
    // see: https://sylabs.io/guides/latest/user-guide/bind_paths_and_mounts.html
    // in this profile, we are pointing to local intallations of NCBI databases 
    // so need to access those paths
    // singularity.runOptions = "-B /home/databases"
  }

  test {
    includeConfig 'conf/test.config'
  }
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.pdf"
}

manifest {
    name            = 'stenglein-lab/btv_segment_table'
    author          = 'Mark Stenglein'
    homePage        = 'https://github.com/stenglein-lab/btv_segment_table'
    description     = 'A pipeline to quantify #s of reads mapping to bluetongue virus (BTV) segments in a co-infection/reassortment experiment'
    defaultBranch   = 'main'
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.04.0'
    version         = '1.0'
}


// Turn this option on to delete all intermediate files from the analysis
// see: https://www.nextflow.io/docs/latest/config.html
// cleanup = true
